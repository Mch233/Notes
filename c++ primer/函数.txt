函数(返回类型、函数名、形参类型)

形参和实参
    实参是形参的初始值
    实参的类型必须与对应的形参类型匹配

static类型
    局部静态对象
    函数调用之后不销毁，存在到程序终止

分离式编译
    a.h　	//函数声明
    
    a.cpp	//函数定义
	#include "a.h"
    
    main.cpp
	#include "a.h"

参数传递
    值传递　函数对形参的所以操作都不会影响实参
    引用传递
    指针传递

    形参的初始化方式
	非常量可以初始化底层const对象，但是底层const对象不能初始化非常量
	普通的引用必须用同类型的对象初始化　形参int & 实参int
	把函数不会改变的形参定义成常量引用

    数组形参
	因为不能拷贝数组，所以无法以值传递的方式使用数组参数
	
	确保使用数组不越界
	    传递一个表示数组大小的形参
	    传递指向数组首元素和尾后元素的指针
	
	数组的引用形参
	    int &arr[10]    //引用的数组
	    int (&arr)[10]  //数组的引用
	    限制了函数的可用性，只能将函数作用于大小为10的数组

    可变形参
	initializer list标准库类型
	可变参数模板

返回类型和return语句
    函数完成后，它所占用的存储空间被释放，所以不能返回局部对象的引用或指针
    
    返回数组的指针的函数形式
    int (*func(int i))[10];
	func(int i)		    表示调用func函数时需要一个int类型的实参
	(*func(int i))		    可以对函数调用结果执行解引用
	(*func(int i))[10]　	    解引用func的调用得到一个大小是10的数组
	int (*func(int i))[10]	    数组的元素是int类型
    尾置返回类型
    auto func(int i) -> int (*)[10]

重载函数
    底层const可以用来区分形参异同，顶层const不能
    
    如果在内层作用域中声明名字，它将隐藏外层作用域中声明的同名实体。
    在不同的作用域中无法重载函数名。

默认实参
    函数调用时实参按位置解析
    尽量让不使用默认值的形参在前面，使用默认值的形参在后面

内联函数和constexpr函数
    内联函数
        声明：返回类型前加上关键字inline
        作用：优化规模较小、流程直接、频繁调用的函数
    
    constexpr函数
        用于常量表达式

    内联函数和constexpr函数可以在程序中多次定义，但多次定义必须完全一致。所以通常定义在头文件中。

预处理
    assert预处理宏
    定义在cassert头文件中，常用来检查“不能发生”的条件
	assert(expr);
	expr为假，输出信息并终止程序；expr为真，什么也不做

    NDEBUG预处理变量

函数匹配
    实参内置类型的提升和转换
    所有算术类型转换的级别都一样
	void manip(long);
	void manip(float);
	manip(3.14);		//错误：二义性调用 3.14为double,它能转换成long也能转换成float
    
    编译器可通过实参是否为常量来匹配函数

函数指针
    函数指针指向某种特定类型。函数的类型由它的返回类型和形参类型共同决定的，与函数名无关。
    bool (*pf) (const string &,const string &)	    //pf是一个指向函数的指针，该函数的参数是两个const string的引用，返回值是bool类型

    在指向不同函数类型的指针间不存在转换规则
    函数指针的类型必须与重载函数中的某一个精确匹配
    把函数作为形参，它会自动地转换成指向函数的指针

    typedef decltype(function) *Func;	    //Func为指向函数的指针

    返回指向函数的指针
	int (*f1(int)) (int*,int);	//f1是函数，返回一个指针。指针指向函数int (int*,int)
	
	auto f1(int) -> int (*)(int*,int);

	using F = int (*) (int*,int);
	F f1(int);			//F是指向函数的指针，f1返回指向函数的指针

	using FF = int (int*,int);
	FF *f2(int);			//FF是函数类型，f２显式地指定返回类型是指向函数的指针

