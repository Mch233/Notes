:h [命令] 查询帮助文档
VIM代替VI
alias vi=vim

一般模式

	操作
			!外部过滤器
			=自动格式化
			y拷贝
			d删除
			c修改
			>缩进
			<反缩进

	移动光标
			[h、j、k、l]，分别控制光标左、下、上、右移一格
			[n<space>] 光标向右移动n个字符

			单词
				[b]光标跳到上个单词的开头
				[ge]  移动到上一单词的结尾

				[w] 光标跳到下个单词的开头
				[e] 光标跳到下个单词的字尾

			句
				(上一句，句首
				)下一句，句首

			行
				[Home] 移动到这一行的最前面字符处
				[End] 移动到这一行的最后面字符处
				[0] 光标跳到行首
				[$] 光标跳到行尾
				-本行，行首
				+下一行，行首
				[nG] 移动到这个文件的第n行
				[gg] 移动到这个文件的第一行
				[n<Enter>] 光标向下移动n行

			段
				{段首
				}段尾

			屏幕
				[ctrl+b] 屏幕往"后"移动一页
				[ctrl+f] 屏幕往"前"移动一页
				[H] 屏幕顶行
				[M] 屏幕中间行
				[L] 屏幕底行

			文件	
				[G] 文件的最后一行

	查找
		字符
			f[char]　行内向后查找字符
			F[char]　行内向前查找字符
			t[char]　行内向后查找字符的前一个字符
			t[char]　行内向前查找字符的后一个字符

			; 重复查找上次 f 命令所查找的字符
			,重复查找上次 Ｆ 命令所查找的字符
	


		词
			[/word] 向光标向下寻找一个名称为word的字符串
			[?word] 向光标向上寻找一个名称为word的字符串

			* 查找当前光标下的单词

			[n] 代表重复前一个查找的动作
			*nn 会遍历完所有的匹配项，从而跳回到本次查找的起点
			[N] 与n刚好相反，为[反向]进行行前一个查找动作

	替换
		Ｒ替换模式　替换光标所在的文字，直到按下 ESC 为止
		r[char] 　替换字符

		[:n1,n2s/word1/word2/g] 
		在第n1与n2行之间查找word1 这个字符串，并将该字符串替换为word2

		[:1,$s/word1/word2/g] 从第一行到最后一行查找word1字符串，并将该字符串替换为word2

		[:1,$s/word1/word2/gc] 从第一行到最后一行查找word1字符串，并将该字符串替换为word2 ，且在替换前提示用户确认是否进行替换

	删除
		[x] 为向后删除一个字符 
		[X] 为向前删除一个字符
		[d0] 删除光标所在处，到该行的最前一个字符
		[D] 删除光标所在处，到该行的最后一个字符

		[dd] 删除光标所在行
		
	复制
		[y0] 复制光标所在的那个字符到该行行首的所有数据
		[y$] 复制光标所在的那个字符到该行行尾的所有数据

		[yy] 复制光标所在的那一行
		
		[p]将已复制的数据在光标下一行粘贴上
		[P] 则为贴在光标的上一行

	撤销
		[u] 恢复前一个操作
		[Ctrl+r]重做上一个操作

	设置标记
		m{a-zA-Z} 　用选定的字母标记当前光标所在位置
		小写位置标记只在每个缓冲区里局部可见，而大写位置标记则全局可见
			`` 当前文件中上次跳转动作之前的位置
			`. 上次修改的地方
			`^ 上次插入的地方
			`[ 上次修改或复制的起始位置
			`] 上次修改或复制的结束位置
			`< 上次高亮选区的起始位置
			`> 上次高亮选区的结束位置

		`{mark} 命令跳到位置标记所在行

	宏
		q 键既是“录制”按钮，也是“停止”按钮
		一开始需要按 q{register}，从而指定一个用于保存宏的寄存器
		:reg a 　　　查看寄存器内容

		@{register} 　执行指定寄存器的内容

		qA 　追加录制按键操作，附加到寄存器 a 原有的内容之后

	其他
		.重复上次的修改
		从进入插入模式到退出插入模式算作一次修改

		J两行合并

		g~ 反转大小写
		gu 转换为小写
		gU 转换为大写


编辑模式
	进入
		i 为[从目前光标所在处插入]
		I 为[在目前所在行的第一个非空格符处开始插入]
		 
		a 为[从目前光标所在的下一个字符处开始插入]
		A 为[从光标所在行的最后一个字符处开始插入]

		o 为[在目前光标所在的下一行处插入新的一行]
		O 为在目前光标所在处的上一行插入新的一行

		C删除至行末，进入编辑模式

		S删除行，进入编辑模式
		s删除字符，进入编辑模式

	自动补全
		<C-n> 普通关键字
		<C-x><C-n> 当前缓冲区关键字
		<C-x><C-i> 包含文件关键字
		<C-x><C-]> 标签文件关键字
		<C-x><C-k> 字典查找
		<C-x><C-l> 整行补全
		<C-x><C-f> 文件名补全
		<C-x><C-o> 全能（Omni）补全

		<C-n> 使用来自补全列表的下一个匹配项（next 匹配项）
		<C-p> 使用来自补全列表的上一个匹配项（previous 匹配项）
		<Down> 选择来自补全列表的下一个匹配项
		<Up> 选择来自补全列表的上一个匹配项
		<C-y> 确认使用当前选中的匹配项（yes）
		<C-e> 还原最早输入的文本（从自动补全中 exit）
		<C-h> （与 <BS>） 从当前匹配项中删除一个字符
		<C-l> 从当前匹配项中增加一个字符
		{char} 中止自动补全并插入字符 {char}

	[Esc] 退出编辑模式，回到一般模式


命令行模式
	[:w] 保存编辑的内容
	[:w!]强制写入该文件，但跟你对该文件的权限有关
	[:q] 离开vi
	[:q!] 不想保存修改强制离开
	[:wq] 保存后离开
	[:x] 保存后离开
	[ZZ] 若文件没有更动，则不保存离开，若文件已经被更改过，则保存后离开

	:[range] delete [x] 删除指定范围内的行[到寄存器 x 中]
	:[range] yank [x] 复制指定范围的行[到寄存器 x 中]
	:[line] put [x] 在指定行后粘贴寄存器 x 中的内容
	:[range] copy {address} 把指定范围内的行拷贝到 {address} 所指定的行之下
	:[range] move {address} 把指定范围内的行移动到 {address} 所指定的行之下
	:[range] join 连接指定范围内的行

	:[range] normal {commands} 对指定范围内的每一行执行普通模式命令 {commands}

	:[range]substitute/{pattern}/{string}/[flags] 把指定范围内出现{pattern}的地方替换为{string}
	:[range]global/{pattern}/[cmd] 对指定范围内匹配{pattern}的所有行，在其上执行Ex 命令{cmd}
	<C-r><C-w> 插入光标下的单词
	<C-r><C-a> 插入光标下的字串

	[:w filename] 将编辑的数据保存成另一个文件（类似另存）
	[:r filename] 在编辑的数据中，读入另一个文件的数据。即将[filename] 这个文件的内容加到光标所在行后面

	[:n1,n2 w filename] 将n1到n2的内容保存成filename这个文件。
	[:! command]暂时离开vi 到命令行模式下执行command的显示结果！

	 @: 重复上次的命令

	命令加一个叹号前缀可以调用外部程序

	:shell 启动一个 shell (输入 exit 返回 Vim)


块选择
	[v]字符选择，会将光标经过的地方反白选择
	[V] 行选择，会将光标经过的行反白选择
	[Ctrl+v] 块选择，可以用长方形的方式选择资料 （提制竖列）
	[y] 将反白的地方复制
	[d] 将反白的地方删除


多窗口功能
	有两个需要对照着看的文件
	[:sp filename]开启一个新窗口，如果有加 filename， 表示在新窗口开启一个新文件，否则表示两个窗口为同一个文件内容(同步显示)。

	[ctrl+w+j]
	[ctrl+w+↓]移动到下方的窗口。

	[ctrl+w+k]
	[ctrl+w+↑]移动到上面的窗口

