缓冲区
	每次打开一个文件时，Vim 就会创建一个新的缓冲区
	缓冲区列表记录了一次编辑会话中打开的所有文件,并对这些文件进
	行管理
	文件是存储在磁盘上的，而缓冲区则存在于内存中
	当 Vim 打开一个文件时，该文件的内容被读入一个具有相同名字的缓冲区。
	刚开始，缓冲区的内容和文件的内容完全相同，但当我们对缓冲区做出修改时，二者的内容就会出现差别。如果我们决定保留这些修改，就可以再把缓冲区的内容写回到文件里
	Vim允许同时在多个缓冲区上工作


	:ls 　列出所有被载入到内存中的缓冲区的列表
	% 符号指明哪个缓冲区在当前窗口中可见，而 # 符号则代表轮换文件
	 <C-^>可以在当前文件和轮换文件间快速切换


	遍历缓冲区文件
	:bprev 　在列表中反向移动
	:bnext 　在列表中正向移动
	:buffer N   直接凭编号跳转到一个缓冲区
	:bfirst 　跳到列表的开头
	:blast 　　跳到列表的结尾

	删除缓冲区文件
		:bdelete 命令
		:ls 
		:bdelete N1 N2 N3
		:N,M bdelete 

	:bufdo    在 :ls 列出的所有缓冲区上执行 Ex 命令





参数列表
	参数列表是缓冲区列表的强力补充,参数列表比缓冲区列表更容易管理

	:args   把缓冲区列表中的文件分组，此后，就可以遍历这个参数列表
	:args {arglist} 　清空并重新设置参数列表

	 遍历参数列表中的文件
	 :next 
	 :prev 

	 :argdo 命令在列表中的每个缓冲区上执行同一条命令





分割窗口
	<C-w>s 水平切分此窗口，使之成为两个高度相同的窗口
	 <C-w>v 命令对其进行垂直切分
	 :e {filename}，把另外一个缓冲区载入活动窗口中

	:sp {file} 水平切分当前窗口，并在新窗口中载入{file}
	:vsp {file} 垂直切分当前窗口，并在新窗口中载入{file}

	改变窗口大小
	<C-w>= 使所有窗口等宽、等高
	<C-w>_ 最大化活动窗口的高度
	<C-w>| 最大化活动窗口的宽度
	[N]<C-w>_ 把活动窗口的高度设为[N]行
	[N]<C-w>| 把活动窗口的宽度设为[N]列




标签页
	Vim 的标签页与缓冲区并非一一对应的关系，相反，应该把标签页想成容纳一系
	列窗口的容器

	:lcd {path} 　设置当前窗口的本地工作目录
	:lcd 只影响当前窗口，而非当前标签页

	:windo lcd {path} 　　为所有窗口设置本地工作目录。

	新建
	:tabe {filename}     在新标签页中打开 {filename}
	<C-w>T                         把当前窗口移到一个新标签页

	关闭
	:tabc                           关闭当前标签页及其中的所有窗口
	:tabo                           只保留活动标签页，关闭所有其他标签页

	切换
	:tabn {N}         {N}gt   切换到编号为 {N} 的标签页
	:tabn               gt        切换到下一标签页
	:tabp               gT        切换到上一标签页

	:tabmove [N] 命令可以重新排列标签页




打开文件
	:e
	% 符号代表活动缓冲区的完整文件路径
	:h 修饰符会去除文件名，但保留路径中的其他部分
	%:h<Tab> 会被展开为当前文件所在目录的路径

	'path' 选项允许指定一些目录，当调用 :find 命令时，Vim 会在这些
	目录中进行查找
	:set path+=app/**           ** 通配符会匹配 app/ 目录下的所有子目录
	文件名不唯一<Tab>选择




netrw 文件系统
	vim .                     . 代表了当前工作目录

	:Explore 　　　:E 打开文件管理器，并显示活动缓冲区所在的目录

	:h netrw-%创建新文件
	:h netrw-d创建目录
	:h netrw-rename重命名已有的文件及目录
	:h netrw-del删除



