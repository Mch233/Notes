map()
	函数接收两个参数，一个是函数，一个是Iterable，
	map将传入的函数依次作用到序列的每个元素，并把结果作为新的Iterator返回。

	函数返回的是一个Iterator，也就是一个惰性序列，所以要强迫map()完成计算结果，需要用list()函数获得所有结果并返回list。

reduce
	把一个函数作用在一个序列[x1, x2, x3, ...]
	上，这个函数必须接收两个参数，reduce把结果继续和序列的下一个元素做累积计算

例子：
	from functools import reduce

	DIGITS = {'0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9}

	def str2int(s):
	    def fn(x, y):
	        return x * 10 + y
	    def char2num(s):
	        return DIGITS[s]
	    return reduce(fn, map(char2num, s))

filter()
	用途：过滤序列。

	filter()也接收一个函数和一个序列
	把传入的函数依次作用于每个元素，然后根据返回值是True还是False决定保留还是丢弃该元素。
	
	用filter()这个高阶函数，关键在于正确实现一个“筛选”函数。
	
	filter()函数返回的是一个Iterator，也就是一个惰性序列，所以要强迫filter()完成计算结果，需要用list()函数获得所有结果并返回list。

sorted

对list进行排序：

还可以接收一个key函数来实现自定义的排序例如按绝对值大小排序：
sorted([36, 5, -12, 9, -21], key=abs)