使用模块
	任何模块代码的第一个字符串都被视为模块的文档注释
	使用__author__变量把作者写进去，这样当你公开源代码后别人就可以瞻仰你的大名

	if __name__=='__main__':
	    test()
	在命令行运行模块文件时，Python解释器把一个特殊变量__name__置为__main__
	而如果在其他地方导入该模块时，if判断将失败
	因此，这种if测试可以让一个模块通过命令行运行时执行一些额外的代码，最常见的就是运行测试




作用域
	正常的函数和变量名是公开的，可以被直接引用
	__xxx__这样的变量是特殊变量，可以被直接引用，但是有特殊用途
	_xxx和__xxx这样的函数或变量就是非公开的（private），不应该被直接引用




安装第三方模块
	Anaconda
	第三方库都会在Python官方的pypi.python.org网站注册
	要安装一个第三方库，必须先知道该库的名称，可以在官网或者pypi上搜索，比如Pillow的名称叫Pillow
	因此，安装Pillow的命令就是：pip3 install　--user Pillow





模块搜索路径
	默认情况下，Python解释器会搜索当前目录、所有已安装的内置模块和第三方模块
	搜索路径存放在sys模块的path变量中

	添加自己的搜索目录，有两种方法：

		一是直接修改sys.path，添加要搜索的目录：
		>>> import sys
		>>> sys.path.append('/Users/michael/my_py_scripts')
		这种方法是在运行时修改，运行结束后失效

		第二种方法是设置环境变量PYTHONPATH，该环境变量的内容会被自动添加到模块搜索路径中
		设置方式与设置Path环境变量类似
		只需要添加你自己的搜索路径，Python自己本身的搜索路径不受影响

